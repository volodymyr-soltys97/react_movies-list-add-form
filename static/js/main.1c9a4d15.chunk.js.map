{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","handleSubmit","event","preventDefault","setState","newMovie","props","addMovie","this","onSubmit","type","placeholder","value","onChange","target","Component","App","moviesFromServer","React","ReactDOM","render","document","getElementById"],"mappings":"0UAKaA,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,YAAaC,EADoB,EACpBA,OAAQC,EADY,EACZA,QADY,OAGxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BC1BKK,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,cCEfC,EAAb,4MACEC,MAAe,CACbd,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTS,OAAQ,IANZ,EASEG,aAAe,SAACC,GACdA,EAAMC,iBAEN,EAAKC,SAAS,CACZlB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTS,OAAQ,KAGV,MAEI,EAAKE,MAEHK,EAAW,CACfnB,MALF,EACEA,MAIOC,YALT,EACSA,YAIaE,QALtB,EACsBA,QAISD,OAL/B,EAC+BA,OAIQU,OALvC,EACuCA,QAOvC,EAAKQ,MAAMC,SAASF,IA5BxB,4CA+BE,WAAU,IAAD,OACP,EAEIG,KAAKR,MADPd,EADF,EACEA,MAAOC,EADT,EACSA,YAAaE,EADtB,EACsBA,QAASD,EAD/B,EAC+BA,OAAQU,EADvC,EACuCA,OAGvC,OACE,8BACE,uBACER,UAAU,OACVmB,SAAUD,KAAKP,aAFjB,UAIE,uBACES,KAAK,OACLC,YAAY,QACZC,MAAO1B,EACP2B,SAAU,SAACX,GACT,EAAKE,SAAS,CAAElB,MAAOgB,EAAMY,OAAOF,WAIxC,uBACEF,KAAK,OACLC,YAAY,cACZC,MAAOzB,EACP0B,SAAU,SAACX,GACT,EAAKE,SAAS,CAAEjB,YAAae,EAAMY,OAAOF,WAI9C,uBACEF,KAAK,OACLC,YAAY,UACZC,MAAOvB,EACPwB,SAAU,SAACX,GACT,EAAKE,SAAS,CAAEf,QAASa,EAAMY,OAAOF,WAI1C,uBACEF,KAAK,OACLC,YAAY,SACZC,MAAOxB,EACPyB,SAAU,SAACX,GACT,EAAKE,SAAS,CAAEhB,OAAQc,EAAMY,OAAOF,WAIzC,uBACEF,KAAK,OACLC,YAAY,SACZC,MAAOd,EACPe,SAAU,SAACX,GACT,EAAKE,SAAS,CAAEN,OAAQI,EAAMY,OAAOF,WAIzC,wBAAQF,KAAK,SAAb,0BAvFV,GAA8BK,a,OCJjBC,EAAb,4MACEhB,MAAe,CACbL,OAAQsB,GAFZ,EAKEV,SAAW,SAACV,GACV,EAAKO,UAAS,SAAAJ,GACZ,MAAO,CACLL,OAAO,GAAD,mBAAMK,EAAML,QAAZ,CAAoBE,SARlC,4CAaE,WACE,IAAQF,EAAWa,KAAKR,MAAhBL,OAER,OACE,sBAAKL,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAUiB,SAAUC,KAAKD,oBAtBnC,GAAyBW,IAAMH,WCN/BI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.1c9a4d15.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\n\ntype Props = {\n  addMovie: (movies: Movie) => void\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n\n    const {\n      title, description, imdbUrl, imgUrl, imdbId,\n    } = this.state;\n\n    const newMovie = {\n      title, description, imdbUrl, imgUrl, imdbId,\n    };\n\n    this.props.addMovie(newMovie);\n  };\n\n  render() {\n    const {\n      title, description, imdbUrl, imgUrl, imdbId,\n    } = this.state;\n\n    return (\n      <div>\n        <form\n          className=\"form\"\n          onSubmit={this.handleSubmit}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"title\"\n            value={title}\n            onChange={(event) => {\n              this.setState({ title: event.target.value });\n            }}\n          />\n\n          <input\n            type=\"text\"\n            placeholder=\"description\"\n            value={description}\n            onChange={(event) => {\n              this.setState({ description: event.target.value });\n            }}\n          />\n\n          <input\n            type=\"text\"\n            placeholder=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={(event) => {\n              this.setState({ imdbUrl: event.target.value });\n            }}\n          />\n\n          <input\n            type=\"text\"\n            placeholder=\"imgUrl\"\n            value={imgUrl}\n            onChange={(event) => {\n              this.setState({ imgUrl: event.target.value });\n            }}\n          />\n\n          <input\n            type=\"text\"\n            placeholder=\"imdbId\"\n            value={imdbId}\n            onChange={(event) => {\n              this.setState({ imdbId: event.target.value });\n            }}\n          />\n\n          <button type=\"submit\">\n            Add\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => {\n      return {\n        movies: [...state.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}